// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://github.com/guttosm/b3pulse",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/guttosm/b3pulse",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/aggregate": {
            "get": {
                "description": "Returns max price and max daily volume for the given ticker since an optional start date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aggregate"
                ],
                "summary": "Get aggregate by ticker",
                "parameters": [
                    {
                        "type": "string",
                        "example": "PETR4",
                        "description": "Stock ticker",
                        "name": "ticker",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "2024-09-01",
                        "description": "Start date in YYYY-MM-DD",
                        "name": "data_inicio",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/github_com_guttosm_b3pulse_internal_domain_dto.AggregateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_guttosm_b3pulse_internal_domain_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_guttosm_b3pulse_internal_domain_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_guttosm_b3pulse_internal_domain_dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_guttosm_b3pulse_internal_domain_dto.AggregateResponse": {
            "type": "object",
            "properties": {
                "max_daily_volume": {
                    "description": "Maximum daily traded volume in the period",
                    "type": "integer",
                    "example": 150000
                },
                "max_range_value": {
                    "description": "Maximum price observed in the period",
                    "type": "number",
                    "example": 20.5
                },
                "ticker": {
                    "description": "Stock ticker requested",
                    "type": "string",
                    "example": "PETR4"
                }
            }
        },
        "github_com_guttosm_b3pulse_internal_domain_dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "internal server error"
                },
                "message": {
                    "type": "string",
                    "example": "Something went wrong"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-08-02T15:04:05Z07:00"
                }
            }
        }
    },
    "tags": [
        {
            "description": "Endpoints for querying ticker aggregates",
            "name": "aggregate"
        },
        {
            "description": "Liveness and readiness probes",
            "name": "health"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "b3pulse API",
	Description:      "B3 trade ingestion & aggregation service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
